package com.techgig;

import java.util.Arrays;
import java.io.*;

public class CandidateCode7
{
    public static int[] getJoinedPipes( int[] input1, int input2 )
    {
        Arrays.sort( input1 );
        
        int[] res = new int[input1.length-1];
        int k =0;
        res[0] = -1;
        int st = 0;
        for( int i=0; i < input1.length;  )
        {
            if( res[st] > 0)
            {   
                int v;
                int u;
                if( input1[i] > res[st] )
                {
                     v = res[st];
                     st++;
                     if( input1[i] > res[st] && res[st] != 0 )
                     {
                         u = res[st];
                         st++;
                         
                         int t = v + u;
                         res[k++] = t;
                     }
                     else
                     {
                         u = input1[i];
                         i++;
                         int t = v + u;
                         res[k++] = t;
                     }
                }
                else if( i+1 < input1.length && input1[i+1] > res[st] )
                {
                    v = input1[i];
                    u = res[st++];
                    
                    int t = v + u;
                    res[k++] = t;
                    i++;
                }
                else if( i+1 < input1.length )
                {
                    int t = input1[i] + input1[i+1];
                    res[k++] =  t;
                    i += 2;
                }
                else
                {
                    int t = input1[i] + res[st++];
                    res[k++] =  t;
                    i++;
                }
            }
            else
            {
                if( i+1 < input1.length )
                {
                    int t = input1[i] + input1[i+1];
                    
                    res[k++] =  t;
                    
                    i += 2;
                }
                else
                {
                    int t = input1[i] + res[st++];
                    res[k++] =  t;
                    i++;
                }
            }
        }
        
        for( int i =st; i < res.length-1; i+= 2 )
        {
            int t = res[i] + res[i+1];
            
            res[k++] = t;
        }
        
        return res;
    }
    
    /*public static void main( String[] args )
    {
        int[] input = {4,3,2,6,12,24,88,1,5,8,9,34,21,29,32,33,41,42,67,56,90,23,14,13,12,16,112,124,188,11,15,18,19,134,121,129,132,133,141,142,167,156,190,123,24,23,22,26,212,224,288,21,25,28,29,234,221,229,232,233,241,242,267,256,290,223,34,33,32,36,312,324,388,31,35,38,39,334,321,329,332,333,341,342,367,356,390,323,44,43,42,46,412,424,488,41,45,48,49,434,421,429,432,433,441,442,467,456,490,423,54,53,52,56,512,524,588,51,55,58,59,534,521,529,532,533,541,542,567,556,590,523,64,63,62,66,612,624,688,61,65,68,69,634,621,629,632,633,641,642,667,656,690,623,4,3,2,6,12,24,88,1,5,8,9,34,21,29,32,33,41,42,67,56,90,23,14,13,12,16,112,124,188,11,15,18,19,134,121,129,132,133,141,142,167,156,190,123,24,23,22,26,212,224,288,21,25,28,29,234,221,229,232,233,241,242,267,256,290,223,34,33,32,36,312,324,388,31,35,38,39,334,321,329,332,333,341,342,367,356,390,323,44,43,42,46,412,424,488,41,45,48,49,434,421,429,432,433,441,442,467,456,490,423,54,53,52,56,512,524,588,51,55,58,59,534,521,529,532,533,541,542,567,556,590,523,64,63,62,66,612,624,688,61,65,68,69,634,621,629,632,633,641,642,667,656,690,623,4,3,2,6,12,24,88,1,5,8,9,34,21,29,32,33,41,42,67,56,90,23,14,13,12,16,112,124,188,11,15,18,19,134,121,129,132,133,141,142,167,156,190,123,24,23,22,26,212,224,288,21,25,28,29,234,221,229,232,233,241,242,267,256,290,223,34,33,32,36,312,324,388,31,35,38,39,334,321,329,332,333,341,342,367,356,390,323,44,43,42,46,412,424,488,41,45,48,49,434,421,429,432,433,441,442,467,456,490,423,54,53,52,56,512,524,588,51,55,58,59,534,521,529,532,533,541,542,567,556,590,523,64,63,62,66,612,624,688,61,65,68,69,634,621,629,632,633,641,642,667,656,690,623,4,3,2,6,12,24,88,1,5,8,9,34,21,29,32,33,41,42,67,56,90,23,14,13,12,16,112,124,188,11,15,18,19,134,121,129,132,133,141,142,167,156,190,123,24,23,22,26,212,224,288,21,25,28,29,234,221,229,232,233,241,242,267,256,290,223,34,33,32,36,312,324,388,31,35,38,39,334,321,329,332,333,341,342,367,356,390,323,44,43,42,46,412,424,488,41,45,48,49,434,421,429,432,433,441,442,467,456,490,423,54,53,52,56,512,524,588,51,55,58,59,534,521,529,532,533,541,542,567,556,590,523,64,63,62,66,612,624,688,61,65,68,69,634,621,629,632,633,641,642,667,656,690,623,4,3,2,6,12,24,88,1,5,8,9,34,21,29,32,33,41,42,67,56,90,23,14,13,12,16,112,124,188,11,15,18,19,134,121,129,132,133,141,142,167,156,190,123,24,23,22,26,212,224,288,21,25,28,29,234,221,229,232,233,241,242,267,256,290,223,34,33,32,36,312,324,388,31,35,38,39,334,321,329,332,333,341,342,367,356,390,323,44,43,42,46,412,424,488,41,45,48,49,434,421,429,432,433,441,442,467,456,490,423,54,53,52,56,512,524,588,51,55,58,59,534,521,529,532,533,541,542,567,556,590,523,64,63,62,66,612,624,688,61,65,68,69,634,621,629,632,633,641,642,667,656,690,623,4,3,2,6,12,24,88,1,5,8,9,34,21,29,32,33,41,42,67,56,90,23,14,13,12,16,112,124,188,11,15,18,19,134,121,129,132,133,141,142,167,156,190,123,24,23,22,26,212,224,288,21,25,28,29,234,221,229,232,233,241,242,267,256,290,223,34,33,32,36,312,324,388,31,35,38,39,334,321,329,332,333,341,342,367,356,390,323,44,43,42,46,412,424,488,41,45,48,49,434,421,429,432,433,441,442,467,456,490,423,54,53,52,56,512,524,588,51,55,58,59,534,521,529,532,533,541,542,567,556,590,523,64,63,62,66,612,624,688,61,65,68,69,634,621,629,632,633,641,642,667,656,690,623};
        
        long start = System.currentTimeMillis();
        int[] res = getJoinedPipes( input, 4 );
        long end = System.currentTimeMillis();
        
        
        for( int i=0; i < res.length; i++ )
        {
            System.out.print( res[i] +", " );
        }
        System.out.println("");
        System.out.println( "Time took in MS = " + (end-start));
    }*/
}
